# This is a GitHub workflow defining a set of jobs with a set of steps.
# ref: https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions
#
# - Watch the proxy.chp.image.tag field of values.yaml to match the latest
#   jupyterhub/configurable-http-proxy image tag.
#
# - Watch the proxy.traefik.image.tag field of values.yaml to match the latest
#   traefik image tag.
#
# - Watch the jupyterhub pinning in images/hub/requirements.in to match the
#   latest jupyterhub version available on PyPI, and if doing this, also
#   refreeze images/hub/requirements.txt.
#
name: Watch dependencies

on:
  push:
  schedule:
    # Run at 05:00 every day, ref: https://crontab.guru/#0_5_*_*_*
    - cron: "0 5 * * *"
  workflow_dispatch:

jobs:
  update-image-dependencies:
    # Don't run this job on forks
    # if: github.repository == 'jupyterhub/zero-to-jupyterhub-k8s'
    runs-on: ubuntu-20.04

    # Write permissions granted for the peter-evans/create-pull-request action
    # to push to a branch and create/update a PR
    permissions:
      contents: write
      pull-requests: write

    strategy:
      fail-fast: false
      matrix:
        include:
          - name: chp
            registry: registry.hub.docker.com
            repository: jupyterhub/configurable-http-proxy
            values_path: proxy.chp.image.tag
            version_startswith: ""
          - name: traefik
            registry: registry.hub.docker.com
            repository: library/traefik
            values_path: proxy.traefik.image.tag
            version_startswith: ""
          - name: kube-scheduler
            registry: k8s.gcr.io
            repository: kube-scheduler
            values_path: scheduling.userScheduler.image.tag
            version_startswith: "v1.23"
          - name: pause
            registry: k8s.gcr.io
            repository: pause
            values_path: scheduling.userPlaceholder.image.tag
            version_startswith: ""

    steps:
      - uses: actions/checkout@v3

      - name: Get values.yaml pinned tag of ${{ matrix.registry }}/${{ matrix.repository }}
        id: local
        run: |
          local_tag=$(cat jupyterhub/values.yaml | yq e '.${{ matrix.values_path }}' -)
          echo "::set-output name=tag::$local_tag"

      - name: Get latest tag of ${{ matrix.registry }}/${{ matrix.repository }}
        id: latest
        # The skopeo image helps us list tags consistently from different docker
        # registries. We use jq to filter out tags of the x.y or x.y.z format
        # with the optional v prefix or version_startswith filter, and then sort
        # based on the numerical x, y, and z values. Finally, we pick the last
        # value in the list.
        #
        run: |
          latest_tag=$(
              docker run --rm quay.io/skopeo/stable list-tags docker://${{ matrix.registry }}/${{ matrix.repository }} \
            | jq -r '[.Tags[] | select(. | match("^v?\\d+\\.\\d+(\\.\\d+)?$") | .string | startswith("${{ matrix.version_startswith }}"))] | sort_by(split(".") | map(tonumber? // (.[1:] | tonumber))) | last'
          )
          echo "::set-output name=tag::$latest_tag"

      - name: Update values.yaml pinned tag
        if: steps.local.outputs.tag != steps.latest.outputs.tag
        run: |
          sed --in-place 's/tag: "${{ steps.local.outputs.tag }}"/tag: "${{ steps.latest.outputs.tag }}"/g' jupyterhub/values.yaml

      - name: git diff
        if: steps.local.outputs.tag != steps.latest.outputs.tag
        run: git --no-pager diff --color=always

      # ref: https://github.com/peter-evans/create-pull-request
      - name: Create a PR
        if: steps.local.outputs.tag != steps.latest.outputs.tag
        uses: peter-evans/create-pull-request@18f90432bedd2afd6a825469ffd38aa24712a91d
        with:
          token: "${{ secrets.github_token }}"
          branch: update-image-${{ matrix.name }}
          labels: maintenance,dependencies
          commit-message: Update ${{ matrix.repository }} version to ${{ steps.latest.outputs.tag }}
          title: Update ${{ matrix.repository }} version to ${{ steps.latest.outputs.tag }}
          body: >-
            A new ${{ matrix.repository }} image version has been detected, version
            `${{ steps.latest.outputs.tag }}`.


            Please close and reopen this PR to run tests for now. This PR was
            opened with a `secrets.github_token` and will therefore not trigger
            other workflows to run. This can be resolved if we create a bot
            account and use its personal access token instead.

  update-jupyterhub-dependencies:
    # Don't run this job on forks
    if: github.repository == 'jupyterhub/zero-to-jupyterhub-k8s'
    runs-on: ubuntu-20.04

    # Write permissions granted for the peter-evans/create-pull-request action
    # to push to a branch and create/update a PR
    permissions:
      contents: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3

      - name: Get images/hub/requirements.in pinned version of jupyterhub
        id: local
        run: |
          local_version=$(cat images/hub/requirements.in | grep 'jupyterhub==' | sed 's/jupyterhub==//')
          echo "::set-output name=version::$local_version"

      - name: Get latest version of jupyterhub
        id: latest
        run: |
          latest_version=$(
              curl -s https://pypi.org/pypi/jupyterhub/json \
            | jq -r .info.version
          )
          echo "::set-output name=version::$latest_version"

      - name: Update pinned version of jupyterhub
        if: steps.local.outputs.version != steps.latest.outputs.version
        run: |
          sed --in-place 's/jupyterhub==${{ steps.local.outputs.version }}/jupyterhub==${{ steps.latest.outputs.version }}/g' images/hub/requirements.in
          sed --in-place 's/jupyterhub==${{ steps.local.outputs.version }}/jupyterhub==${{ steps.latest.outputs.version }}/g' images/singleuser-sample/requirements.txt
          sed --in-place 's/appVersion: "${{ steps.local.outputs.version }}"/appVersion: "${{ steps.latest.outputs.version }}"/g' jupyterhub/Chart.yaml

      - name: Install dependencies for images/hub/dependencies script
        run: pip install click ruamel.yaml

      - name: Refreeze images/hub/requirements.txt based on images/hub/requirements.in
        if: steps.local.outputs.version != steps.latest.outputs.version
        run: images/hub/dependencies freeze --upgrade

      - name: git diff
        if: steps.local.outputs.version != steps.latest.outputs.version
        run: git --no-pager diff --color=always

      # ref: https://github.com/peter-evans/create-pull-request
      - name: Create a PR
        if: steps.local.outputs.version != steps.latest.outputs.version
        uses: peter-evans/create-pull-request@18f90432bedd2afd6a825469ffd38aa24712a91d
        with:
          token: "${{ secrets.github_token }}"
          branch: update-jupyterhub
          labels: maintenance,dependencies
          commit-message: Update jupyterhub version to ${{ steps.latest.outputs.version }}
          title: Update jupyterhub version to ${{ steps.latest.outputs.version }}
          body: >-
            A new jupyterhub image version has been detected, version
            `${{ steps.latest.outputs.version }}`.


            Please close and reopen this PR to run tests for now. This PR was
            opened with a `secrets.github_token` and will therefore not trigger
            other workflows to run. This can be resolved if we create a bot
            account and use its personal access token instead.
