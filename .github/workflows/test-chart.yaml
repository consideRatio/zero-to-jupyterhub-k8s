# This is a GitHub workflow defining a set of jobs with a set of steps.
# ref: https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions
#
name: Test chart

# Trigger the workflow's on all PRs and pushes so that other contributors can
# run tests in their own forks. Avoid triggering these tests on changes to
# documentation only changes.
on:
  pull_request:
    paths-ignore:
      - "docs/**"
      - "**.md"
      - ".github/workflows/*"
      - "!.github/workflows/test-chart.yaml"
  push:
    paths-ignore:
      - "docs/**"
      - "**.md"
      - ".github/workflows/*"
      - "!.github/workflows/test-chart.yaml"
    branches-ignore:
      - "dependabot/**"
      - "pre-commit-ci-update-config"
      - "update-*"
      - "vuln-scan-*"
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-20.04
    timeout-minutes: 20

    strategy:
      # Keep running even if one variation of the job fail
      fail-fast: false
      matrix:
        # We run this job multiple times with different parameterization
        # specified below, these parameters have no meaning on their own and
        # gain meaning on how job steps use them.
        #
        # k3s-version: https://github.com/rancher/k3s/tags
        # k3s-channel: https://update.k3s.io/v1-release/channels
        #
        include:
          - k3s-channel: v1.24
            test: install
          - k3s-channel: v1.24
            test: install
          - k3s-channel: v1.24
            test: install
          - k3s-channel: v1.24
            test: install
          - k3s-channel: v1.23
            test: install
          - k3s-channel: v1.23
            test: install
          - k3s-channel: v1.23
            test: install
          - k3s-channel: v1.23
            test: install
          - k3s-channel: v1.22
            test: install
          - k3s-channel: v1.22
            test: install
          - k3s-channel: v1.22
            test: install
          - k3s-channel: v1.22
            test: install
          - k3s-channel: v1.21
            test: install
          - k3s-channel: v1.21
            test: install
          - k3s-channel: v1.21
            test: install
          - k3s-channel: v1.21
            test: install
          - k3s-channel: v1.20
            test: install
          - k3s-channel: v1.20
            test: install
          - k3s-channel: v1.20
            test: install
          - k3s-channel: v1.20
            test: install

    steps:
      - uses: actions/checkout@v3
        with:
          # chartpress requires git history to set chart version and image tags
          # correctly
          fetch-depth: 0

      # Starts a k8s cluster with NetworkPolicy enforcement and installs both
      # kubectl and helm
      #
      # ref: https://github.com/jupyterhub/action-k3s-helm/
      - uses: jupyterhub/action-k3s-helm@v3
        with:
          k3s-channel: ${{ matrix.k3s-channel }}
          metrics-enabled: false
          traefik-enabled: false
          docker-enabled: true

      # Install a local ACME server to fill the role of Let's Encrypt (LE). We
      # do this as the HTTP challenge sent out by an ACME server must be able to
      # reach the ACME client in our autohttps pod.
      - name: Install local ACME server
        run: |
          helm install pebble --repo https://jupyterhub.github.io/helm-chart/ pebble --values dev-config-pebble.yaml

      # It is only needed at this point forward as this is when we install
      # jupyterhub and the autohttps pod is about to start, so for CI
      # performance we delayed this until now and did other things in between.
      - name: Await local ACME server
        uses: jupyterhub/action-k8s-await-workloads@v1
        with:
          timeout: 150
          max-restarts: 1

      - name: "Install local chart"
        run: |
          helm upgrade --install jupyterhub ./jupyterhub \
              --values dev-config.yaml \
              --values dev-config-local-chart-extra-config.yaml \
              ${{ matrix.local-chart-extra-args }}

      - name: Await local chart cert acquisition
        run: |
          . ./ci/common
          await_autohttps_tls_cert_acquisition

      # ref: https://github.com/jupyterhub/action-k8s-namespace-report
      - name: Kubernetes namespace report
        uses: jupyterhub/action-k8s-namespace-report@v1
        if: always()
        with:
          important-workloads: deploy/hub deploy/proxy deploy/autohttps
