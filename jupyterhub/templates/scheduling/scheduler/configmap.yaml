{{- if .Values.scheduling.jupyterhubScheduler.enabled -}}
kind: ConfigMap
apiVersion: v1
metadata:
  name: jupyterhub-scheduler
  namespace: kube-system
  labels:
    {{- include "jupyterhub.labels" . | nindent 4 }}
    {{- /* NOT FOUND
        { "name": "CheckNodePIDPressure" },
        { "name": "CheckNodeUnschedulable" },
        { "name": "CheckNodeCondition" },
        { "name": "General" },
        { "name": "PodToleratesNodeNoExecuteTaints" },
        { "name": "CheckNodeMemoryPressure" },
        { "name": "CheckNodeDiskPressure" },
    */}}
data:
  policy.cfg: |
    {
      "kind": "Policy",
      "apiVersion": "v1",
      "predicates": [
        { "name": "PodFitsResources" },
        { "name": "HostName" },
        { "name": "PodFitsHostPorts" },
        { "name": "MatchNodeSelector" },
        { "name": "NoDiskConflict" },
        { "name": "PodToleratesNodeTaints" },
        { "name": "MaxEBSVolumeCount" },
        { "name": "MaxGCEPDVolumeCount" },
        { "name": "MaxAzureDiskVolumeCount" },
        { "name": "CheckVolumeBinding" },
        { "name": "NoVolumeZoneConflict" },
        { "name": "MatchInterPodAffinity" }
      ],
      "priorities": [
        { "name": "MostRequestedPriority",        "weight": 50 },
        { "name": "InterPodAffinityPriority",     "weight": 10 },
        { "name": "NodeAffinityPriority",         "weight": 100 },
        { "name": "NodePreferAvoidPodsPriority",  "weight": 1000 }
      ],
      "hardPodAffinitySymmetricWeight" : 0,
      "alwaysCheckAllPredicates" : true
    }
{{- end }}

{{- /*
Providing HardPodAffinitySymmetricWeight in the policy config is the new and
preferred way of providing the value. Give it higher precedence than scheduler
CLI configuration when it is provided. It represents the weight of implicit
PreferredDuringScheduling affinity rule.

When AlwaysCheckAllPredicates is set to true, scheduler checks all the
configured predicates even after one or more of them fails.
  
GeneralPredicates checks whether noncriticalPredicates and EssentialPredicates
pass. noncriticalPredicates are the predicates that only non-critical pods need
and EssentialPredicates are the predicates that all pods, including critical
pods, need

MostRequestedPriorityMap is a priority function that favors nodes with most
requested resources. It calculates the percentage of memory and CPU requested by
pods scheduled on the node, and prioritizes based on the maximum of the average
of the fraction of requested to capacity. Details: (cpu(10 * sum(requested) /
capacity) + memory(10 * sum(requested) / capacity)) / 2
*/}}
